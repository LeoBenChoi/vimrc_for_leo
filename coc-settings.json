{
  // 当使用 UltiSnips 片段补全时，在某些 Python 环境下可能会显示一个额外的提示或确认对话框
  // 设置为 false：禁用这种特定的提示行为，让片段补全更加流畅，减少中断。
  // 效果：用户触发片段时直接插入内容，不会出现中间确认步骤，提升编码效率。
  "snippets.ultisnips.pythonPrompt": false,

  // 启用诊断功能（错误、警告等）
  "diagnostic.enable": true,

  // 启用虚拟文本显示诊断信息
  // 这会将错误/警告信息直接显示在代码行的末尾
  "diagnostic.virtualText": true,

  // 设置虚拟文本的显示模式为“行末”（end of line）
  // 确保信息出现在代码行的末尾
  "diagnostic.virtualTextMode": "eol",

  // 控制虚拟文本是否只在当前行显示
  // true: 只在光标所在行显示诊断信息
  // false: 在所有有诊断信息的行显示
  "diagnostic.virtualTextCurrentLineOnly": false,

  // 虚拟文本的前缀，可以自定义，使其更易读
  "diagnostic.virtualTextPrefix": " ❯ ",

  // 当一行有多个诊断信息时，它们之间的分隔符
  "diagnostic.virtualTextLineSeparator": " · ",

  // 配置诊断信息在行号旁显示的符号（可选，但推荐）
  "diagnostic.errorSign": "E",
  "diagnostic.warningSign": "W",
  "diagnostic.infoSign": "I",
  "diagnostic.hintSign": "H",

  // --- 其他常用 CoC 配置项 (可选，根据你的需求添加) ---

  // 自动补全建议的触发方式
  "suggest.autoTrigger": "always",
  // 自动补全时是否默认选中第一个项
  // "suggest.noselect": false, // Removed duplicate key
  // 自动补全的超时时间（毫秒）
  "suggest.timeout": 500,

  // 启用代码操作（Code Action），如快速修复、重构等
  "codeAction.enable": true,
  // 代码操作是否在浮动窗口中显示
  "codeAction.showInFloat": true,

  // 启用函数签名帮助
  "signature.enable": true,
  // 函数签名帮助是否在浮动窗口中显示
  "signature.floatEnable": true,

  // 禁止自动选中第一个补全项
  // 启用用补全项的预览窗口
  // 禁止自动预选补全项
  "suggest.noselect": true,
  "suggest.enablePreview": true,
  "suggest.enablePreselect": false,

  // 配置 Go 语言服务器
    "languageserver": {
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"]
    }
  },

// 关闭 Vetur 的部分验证功能，避免与其他工具冲突,防止编写javaScript和模板时出现不必要的错误提示
"vetur.validation.script": false,
"vetur.validation.template": false

}
